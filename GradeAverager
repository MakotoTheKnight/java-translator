A public class named "GradeAverager"
	A public constructor
		 -- in scope --
		A call is made to super().

	A static, public method named "main", with parameters:
		String[] args

		 -- in scope --
		Declare a variable score1 with type int.
		Declare a variable score2 with type int.
		Declare a variable score3 with type int.
		Declare a variable average with type double.
		Declare a variable average_no_lowest with type double.
		Declare and instantiate a variable keyboard with type Scanner, with the value "new Scanner(System.in)".
		A call is made to System.out.print("Enter three scores: ").
		A call is made to System.out.println().
		A call is made to System.out.println("The average is: " + average).
		Attempt to run the following code:
		 -- in scope --
		If (score1 < score2 && score1 < score3), then...
		If that isn't a true statement, then...
		A call is made to System.out.println("The lowest score was:" + score1).
		If (score2 < score1 && score2 < score3), then...
		If that isn't a true statement, then...
		A call is made to System.out.println("The lowest score was:" + score2).
		If (score3 < score1 && score3 < score2), then...
		If all else fails, then...
		A call is made to System.out.println("The lowest score was:" + score3).
		If (score1 < score2 && score1 < score3), then...
		If that isn't a true statement, then...
		A call is made to System.out.println("The average without the lowest score is: " + average_no_lowest).
		If (average_no_lowest > 90), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('A').
		If (average_no_lowest < 90 && average_no_lowest > 80), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('B').
		If (average_no_lowest > 70 && average_no_lowest < 80), then...
		If all else fails, then...
		A call is made to System.out.print('C').
		A call is made to System.out.print('D').
		If (score2 < score1 && score2 < score3), then...
		If that isn't a true statement, then...
		A call is made to System.out.println("The average without the lowest score is: " + average_no_lowest).
		If (average_no_lowest > 90), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('A').
		If (average_no_lowest < 90 && average_no_lowest > 80), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('B').
		If (average_no_lowest > 70 && average_no_lowest < 80), then...
		If all else fails, then...
		A call is made to System.out.print('C').
		A call is made to System.out.print('D').
		If (score3 < score1 && score3 < score2), then...
		If all else fails, then...
		A call is made to System.out.println("The average without the lowest score is: " + (score1 + score3) / 2.0).
		If (average_no_lowest > 90), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('A').
		If (average_no_lowest < 90 && average_no_lowest > 80), then...
		If that isn't a true statement, then...
		A call is made to System.out.print('B').
		If (average_no_lowest > 70 && average_no_lowest < 80), then...
		If all else fails, then...
		A call is made to System.out.print('C').
		A call is made to System.out.print('D').
		If the above try failed, catch the exception as a type of Exception, and keep the stack trace in the variable e.

		 -- in scope --
		A call is made to System.out.println(e).
